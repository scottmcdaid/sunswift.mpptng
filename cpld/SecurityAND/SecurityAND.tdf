-- megafunction wizard: %LPM_AND%
-- GENERATION: STANDARD
-- VERSION: WM1.0
-- MODULE: lpm_and 

-- ============================================================
-- File Name: SecurityAND.tdf
-- Megafunction Name(s):
-- 			lpm_and
-- ============================================================
-- ************************************************************
-- THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
--
-- 5.0 Build 148 04/26/2005 SJ Web Edition
-- ************************************************************


--Copyright (C) 1991-2005 Altera Corporation
--Your use of Altera Corporation's design tools, logic functions 
--and other software and tools, and its AMPP partner logic       
--functions, and any output files any of the foregoing           
--(including device programming or simulation files), and any    
--associated documentation or information are expressly subject  
--to the terms and conditions of the Altera Program License      
--Subscription Agreement, Altera MegaCore Function License       
--Agreement, or other applicable license agreement, including,   
--without limitation, that your use is for the sole purpose of   
--programming logic devices manufactured by Altera and sold by   
--Altera or its authorized distributors.  Please refer to the    
--applicable agreement for further details.

INCLUDE "lpm_and.inc";



SUBDESIGN SecurityAND
(
	data0	 : INPUT;
	data1	 : INPUT;
	data2	 : INPUT;
	data3	 : INPUT;
	data4	 : INPUT;
	result	 : OUTPUT;
)

VARIABLE

	lpm_and_component : lpm_and WITH (
			LPM_SIZE = 5,
			LPM_WIDTH = 1,
			LPM_TYPE = "LPM_AND"
			);

BEGIN

	result = lpm_and_component.result[0..0];
	lpm_and_component.data[4..4][0..0] = data4;
	lpm_and_component.data[3..3][0..0] = data3;
	lpm_and_component.data[2..2][0..0] = data2;
	lpm_and_component.data[1..1][0..0] = data1;
	lpm_and_component.data[0..0][0..0] = data0;
END;



-- ============================================================
-- CNX file retrieval info
-- ============================================================
-- Retrieval info: PRIVATE: nInput NUMERIC "5"
-- Retrieval info: PRIVATE: WidthInput NUMERIC "1"
-- Retrieval info: PRIVATE: CompactSymbol NUMERIC "0"
-- Retrieval info: PRIVATE: InputAsBus NUMERIC "0"
-- Retrieval info: PRIVATE: GateFunction NUMERIC "0"
-- Retrieval info: CONSTANT: LPM_SIZE NUMERIC "5"
-- Retrieval info: CONSTANT: LPM_WIDTH NUMERIC "1"
-- Retrieval info: CONSTANT: LPM_TYPE STRING "LPM_AND"
-- Retrieval info: USED_PORT: data0 0 0 0 0 INPUT NODEFVAL data0
-- Retrieval info: USED_PORT: data1 0 0 0 0 INPUT NODEFVAL data1
-- Retrieval info: USED_PORT: data2 0 0 0 0 INPUT NODEFVAL data2
-- Retrieval info: USED_PORT: data3 0 0 0 0 INPUT NODEFVAL data3
-- Retrieval info: USED_PORT: data4 0 0 0 0 INPUT NODEFVAL data4
-- Retrieval info: USED_PORT: result 0 0 0 0 OUTPUT NODEFVAL result
-- Retrieval info: CONNECT: @data 1 0 1 0 data0 0 0 0 0
-- Retrieval info: CONNECT: @data 1 1 1 0 data1 0 0 0 0
-- Retrieval info: CONNECT: @data 1 2 1 0 data2 0 0 0 0
-- Retrieval info: CONNECT: @data 1 3 1 0 data3 0 0 0 0
-- Retrieval info: CONNECT: @data 1 4 1 0 data4 0 0 0 0
-- Retrieval info: CONNECT: result 0 0 0 0 @result 0 0 1 0
-- Retrieval info: LIBRARY: lpm lpm.lpm_components.all
-- Retrieval info: GEN_FILE: TYPE_NORMAL SecurityAND.tdf TRUE
-- Retrieval info: GEN_FILE: TYPE_NORMAL SecurityAND.inc TRUE
-- Retrieval info: GEN_FILE: TYPE_NORMAL SecurityAND.cmp FALSE
-- Retrieval info: GEN_FILE: TYPE_NORMAL SecurityAND.bsf FALSE
-- Retrieval info: GEN_FILE: TYPE_NORMAL SecurityAND_inst.tdf FALSE
